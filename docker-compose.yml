services:
  db: #configura o container do banco de dados
    image: postgres:latest #imagem do postgres
    container_name: bibliotech-db
    environment: #define usuário, senha e banco de dados
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - bibliotech-data:/var/lib/postgresql/data

  backend: #configura o container do backend
    build:
      context: ./
      dockerfile: Dockerfile #caminho para a pasta backend
    container_name: bibliotech-app
    depends_on: #garante que o container do banco de dados seja iniciado antes do backend
      - db
    environment: #define usuário, senha e banco de dados
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8888:8888"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - monitoring
    depends_on:
    - db  # Depende do serviço do banco de dados
    - backend  # Depende do serviço do backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus

networks:
  monitoring:
    driver: bridge

volumes:
  bibliotech-data:
  grafana-storage:
